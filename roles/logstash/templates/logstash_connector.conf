input {
{% for topic in topics %}
  kafka {
    zk_connect => "{% for node in groups.nodes %}kafka{{ loop.index-1 }}:{{ zookeeper_client_port_start + loop.index-1 }}{% if not loop.last %},{% endif %}{% endfor %}"
    topic_id => "{{ topic }}"
    codec => "json"
  }
{% endfor %}
{% for topic in default_topics %}
  kafka {
    zk_connect => "{% for node in groups.nodes %}kafka{{ loop.index-1 }}:{{ zookeeper_client_port_start + loop.index-1 }}{% if not loop.last %},{% endif %}{% endfor %}"
    topic_id => "{{ topic }}"
    codec => "json"
  }
{% endfor %}
}
filter {
  if [ip_address] =~ /.+/ {
    geoip {
      source => "ip_address"
      target => "geoip"
      database => "/usr/share/logstash/logstash-2.2.0/GeoLiteCity.dat"
    }
  }
  if [user] =~ /.+/ {
    checksum {
      algorithm => "sha256"
      keys => ["user"]
    }
    mutate {
      rename => {
        "logstash_checksum" => "user_checksum"
      }
    }
  }
}
output {
  elasticsearch {
    codec => "json"
    hosts => "elasticsearch{{ node_id }}:{{ elasticsearch_port_start+(node_id|int) }}"
    user => "{{ project_id }}"
    index => "{{ project_id }}-%{type}"
    template => "/tmp/logstash/config/elasticsearch_template.json"
    template_name => "{{ project_id }}"
    template_overwrite => true
  }
  file {
    path => "/tmp/logstash/log/{{ project_id }}-%{type}.log"
  }
}